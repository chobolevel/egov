<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<!-- AOP 기반 트랜잭션 처리 설정 -->
	<!-- 어노테이션 방식에 비해 레거시 코드와 호화인 가능하고 세밀한 제어가 가능하다는 점이 있음 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 트랜잭션 어드바이스 정의 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 모든 메서드에 대해 트랜잭션을 적용 -->
		<!-- Exception 발생 시 롤백 처리하도록 설정 -->
		<tx:attributes>
			<tx:method name="*" rollback-for="Exception"/>
		</tx:attributes>
	</tx:advice>

	<!-- AOP 이용한 트랜잭션 적용 대상 지정 -->
	<aop:config>
		<aop:pointcut id="requiredTx" expression="execution(* com.example.demo.service..impl.*Impl.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="requiredTx" />
	</aop:config>

</beans>
